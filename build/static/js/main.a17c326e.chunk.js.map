{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/contacts.js","components/Notification.js","components/App.js","index.js"],"names":["PersonForm","addContact","onSubmit","event","preventDefault","newObject","name","target","elements","value","number","type","Persons","removeContact","selectedPersons","handleRemove","window","confirm","map","p","key","id","onClick","Filter","persons","setSelectedPersons","onChange","filter","person","toLowerCase","includes","axios","get","then","response","data","post","put","delete","Notification","notification","message","console","log","className","App","useState","setPersons","setNotification","useEffect","contacts","catch","error","newPerson","existingPerson","find","setTimeout","concat","parseInt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a17c326e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PersonForm = ({ addContact }) => {\r\n  const handleAddPerson = (event) => {\r\n    event.preventDefault();\r\n    const newObject = {\r\n      name: event.target.elements[\"name\"].value,\r\n      number: event.target.elements[\"number\"].value,\r\n    };\r\n    // call add here\r\n    addContact(newObject);\r\n\r\n    event.target.elements[\"name\"].value = \"\";\r\n    event.target.elements[\"number\"].value = \"\";\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleAddPerson}>\r\n      <h2>Add new contact</h2>\r\n      <div>\r\n        name: <input name=\"name\" />\r\n      </div>\r\n      <div>\r\n        number: <input name=\"number\" />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ removeContact, selectedPersons }) => {\r\n  const handleRemove = (event) => {\r\n    if (\r\n      window.confirm(\r\n        `Are you sure you want to delete a contact id (${event.target.name})?`\r\n      )\r\n    )\r\n      removeContact(event.target.name);\r\n  };\r\n  return (\r\n    <>\r\n      <h2>Numbers</h2>\r\n      {selectedPersons.map((p) => (\r\n        <div key={p.name}>\r\n          {p.name} {p.number}\r\n          <button name={p.id} onClick={handleRemove}>\r\n            delete\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ persons, setSelectedPersons }) => {\r\n  const handleSearch = (event) => {\r\n    setSelectedPersons(\r\n      persons.filter(\r\n        (person) =>\r\n          person.name\r\n            .toLowerCase()\r\n            .includes(event.target.value.toLowerCase()) === true\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      Search by name : <input type=\"text\" onChange={handleSearch}></input>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import axios from \"axios\";\r\n\r\nconst serverURL = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(serverURL).then((response) => response.data);\r\n};\r\n\r\nconst getContact = (id) => {\r\n  return axios.get(`${serverURL}/${id}`).then((response) => response.data);\r\n};\r\n\r\nconst insert = (person) => {\r\n  return axios.post(serverURL, person).then((response) => response.data);\r\n};\r\n\r\nconst update = (id, person) => {\r\n  return axios\r\n    .put(`${serverURL}/${id}`, person)\r\n    .then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${serverURL}/${id}`).then((response) => response.data);\r\n};\r\nexport default { getAll, getContact, insert, update, remove };\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification.message === null) return null;\r\n  console.log(notification);\r\n  return <div className={notification.type}> {notification.message} </div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PersonForm from \"./PersonForm\";\r\nimport Persons from \"./Persons\";\r\nimport Filter from \"./Filter\";\r\nimport contacts from \"../services/contacts\";\r\nimport Notification from \"./Notification\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [selectedPersons, setSelectedPersons] = useState([]);\r\n  const [notification, setNotification] = useState({});\r\n\r\n  const removeContact = (id) => {\r\n    const person = persons.find((p) => p.id === id);\r\n    contacts\r\n      .remove(id)\r\n      .then((data) => {\r\n        setSelectedPersons(selectedPersons.filter((p) => p.id !== id));\r\n        setPersons(persons.filter((p) => p.id !== id));\r\n        setNotification({\r\n          message: `${person.name} has been delete successfully`,\r\n          type: \"success\",\r\n        });\r\n        setTimeout(() => setNotification({}), 3000);\r\n      })\r\n      .catch((error) => {\r\n        setNotification({\r\n          message: `Can not delete account of (${person.name}) because it was already removed from the server.`,\r\n          type: \"error\",\r\n        });\r\n        setSelectedPersons(persons.filter((p) => p.id !== parseInt(id)));\r\n        setTimeout(() => setNotification({}), 5000);\r\n      });\r\n  };\r\n\r\n  const updateContact = (id, person) => {\r\n    contacts\r\n      .update(id, person)\r\n      .then((data) => {\r\n        setPersons(persons.map((p) => (p.id !== data.id ? p : data)));\r\n        setSelectedPersons(persons.map((p) => (p.id !== data.id ? p : data)));\r\n        setNotification({\r\n          message: `${person.name} has been updated successfully`,\r\n          type: \"success\",\r\n        });\r\n        setTimeout(() => setNotification({}), 3000);\r\n      })\r\n      .catch((error) => {\r\n        setNotification({\r\n          message: error.response.data.error,\r\n          type: \"error\",\r\n        });\r\n        setTimeout(() => setNotification({}), 6000);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    contacts\r\n      .getAll()\r\n      .then((data) => {\r\n        setPersons(data);\r\n        setSelectedPersons(data);\r\n      })\r\n      .catch((error) => error.response.data.error);\r\n  }, []);\r\n\r\n  const addContact = (newPerson) => {\r\n    // check if the person's name is already stored in the phonebook\r\n    const existingPerson = persons.find(\r\n      (person) => person.name.toLowerCase() === newPerson.name.toLowerCase()\r\n    );\r\n    if (existingPerson) {\r\n      if (\r\n        window.confirm(\r\n          `${newPerson.name} is already added to phonebook, update the old number with a new one?`\r\n        )\r\n      )\r\n        updateContact(existingPerson.id, newPerson);\r\n    } else {\r\n      contacts\r\n        .insert(newPerson)\r\n        .then((data) => {\r\n          if (data) {\r\n            setPersons(persons.concat(data));\r\n            setSelectedPersons(selectedPersons.concat(data));\r\n            setNotification({\r\n              message: `${data.name} has been added successfully`,\r\n              type: \"success\",\r\n            });\r\n            setTimeout(() => setNotification({}), 3000);\r\n          } else {\r\n            setNotification({\r\n              message: `Not a valid entry!`,\r\n              type: \"error\",\r\n            });\r\n            setTimeout(() => setNotification({}), 5000);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setNotification({\r\n            message: error.response.data.error,\r\n            type: \"error\",\r\n          });\r\n          setTimeout(() => setNotification({}), 6000);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      <Filter\r\n        persons={persons}\r\n        setSelectedPersons={setSelectedPersons}\r\n      ></Filter>\r\n      <PersonForm addContact={addContact}></PersonForm>\r\n      <Persons\r\n        removeContact={removeContact}\r\n        selectedPersons={selectedPersons}\r\n      ></Persons>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./index.css\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}